@model IEnumerable<IndexCuentasViewModel>

@{
	ViewData["Title"] = "Listado de Cuentas";

	string FormatearBalance(decimal balance)
	{
		return Math.Abs(balance).ToString("N");//N para aplicar las coma en los miles
	}

	string ObtenerClaseBalance(decimal balance)
	{
		return balance >= 0 ? "activo" : "Pasivo";
	}
}

<h1>@ViewData["Title"]</h1>

<a asp-action="Crear" class="btn btn-primary">Nuevo</a>

<div class="contenedor-totales mb-3">
	<div>
		<div>
			<strong>Activos</strong>
		</div>
		<div class="activo">
			@FormatearBalance(Model.Where(x => x.Balance > 0).Sum(x => x.Balance))
		</div>
	</div>

	<div>
		<div>
			<strong>Pasivos</strong>
		</div>
		<div class="pasivo">
			@FormatearBalance(Model.Where(x => x.Balance < 0).Sum(x => x.Balance))
		</div>
	</div>

	<div>
		<div>
			<strong>Total</strong>
		</div>
		<div>
			@FormatearBalance(Model.Sum(x => x.Balance))
		</div>
	</div>
</div>

<div class="accordion acordeon-cuentas">
	@foreach (var tipoCuenta in Model)
	{
		<div class="accordion-item">
			<h2 class="accordion-header" id="cabeceraUno">
				@{
					var id = tipoCuenta.TipoCuenta.Replace(" ", "");
					var dataBsTarget = "#" + id;
					var claseTipoCuenta = ObtenerClaseBalance(tipoCuenta.Balance);
				}

				<button class="accordion-button" type="button" data-bs-toggle="collapse" data-bs-target="@dataBsTarget">
					<span>
						<strong>@tipoCuenta.TipoCuenta</strong>
					</span>
					<span class="@claseTipoCuenta">@FormatearBalance(tipoCuenta.Balance)</span>
				</button>
			</h2>

			<div id="@id" class="accordion-collapse collapse show">
				<div>
					<ul class="list-group">
						@foreach (var cuenta in tipoCuenta.Cuentas)
						{
							var claseCuenta = ObtenerClaseBalance(cuenta.Balance);
							<li class="list-group-item">
								<span>
									<strong>@cuenta.Nombre</strong>
								</span>
								<span class="@claseCuenta">
									@FormatearBalance(cuenta.Balance)
								</span>
							</li>
						}
					</ul>
				</div>
			</div>
		</div>
	}
</div>